{"version":3,"sources":["components/UserMenu/UserMenu.module.css","components/ContactForm/ContactForm.module.css","components/Filter/Filter.module.css","components/redux/auth/auth-selectors.js","components/Navigation.js","components/redux/auth/auth-operations.js","components/UserMenu/UserMenu.js","components/AuthNav.js","components/AppBar.js","components/views/RegisterView.js","components/views/LoginView.js","components/redux/contact/contact-selector.js","components/redux/contact/contact-operations.js","components/ContactForm/ContactForm.js","components/ContactList/ContactList.js","components/redux/contact/contact-action.js","components/Filter/Filter.js","components/views/ContactView.js","components/PrivateRoute.js","components/PublicRoute.js","components/views/HomePage.js","components/ContactList/ContactEdit.js","App.js","components/redux/auth/auth-reducers.js","components/redux/contact/contact-reducer.js","components/redux/store.js","index.js","components/ContactList/ContactList.module.css"],"names":["module","exports","getIsAuthenticated","state","auth","isAuthenticated","getUserName","user","name","Navigation","isLoading","useSelector","className","to","exact","axios","defaults","baseURL","token","headers","common","Authorization","register","createAsyncThunk","credentials","a","rejectWithValue","post","response","data","logIn","logOut","_","getCurrentUser","thunkAPI","getState","persistedToken","get","UserMenu","dispatch","useDispatch","Button","variant","color","size","type","onClick","AuthNav","AppBar","RegisterWiew","useState","setName","email","setEmail","password","setPassword","handleChange","target","value","reset","Container","component","maxWidth","Avatar","Typography","onSubmit","event","preventDefault","noValidate","TextField","margin","required","fullWidth","label","autoComplete","autoFocus","onChange","LoginWiew","getContact","contacts","contact","getFilter","filter","getVisibleContact","normalizedFilter","toLowerCase","text","includes","getFiteredContact","fetchContact","addContact","number","deleteContact","contactId","delete","updateContact","patch","console","log","ContactForm","setNumber","find","alert","placeholder","mask","maskChar","inputProps","disabled","startIcon","ContactList","location","useLocation","length","List","map","id","ListItem","ListItemAvatar","ListItemText","primary","secondary","pathname","from","onDeleteContact","actions","changeFilter","createAction","Filter","ContactView","useEffect","PrivateRoute","redirectTo","children","routeProps","isLoggedIn","PublicRoute","restricted","HomePage","ContactEdit","useParams","history","useHistory","push","App","path","initialUserState","createReducer","fulfilled","payload","setError","error","rejected","combineReducers","pending","loading","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","logger","authPersistConfig","key","storage","whitelist","store","configureStore","reducer","persistReducer","authReducer","contactReducer","devTools","process","persistor","persistStore","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c6361896.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container__menu\":\"UserMenu_container__menu__4LEh8\",\"avatar__menu\":\"UserMenu_avatar__menu__3dMPG\",\"name__menu\":\"UserMenu_name__menu__1w_F3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item__form\":\"ContactForm_item__form__2d4st\",\"item__input\":\"ContactForm_item__input__s5Q5u\",\"label\":\"ContactForm_label__3QwkA\",\"input\":\"ContactForm_input__lBUp1\",\"itemForm\":\"ContactForm_itemForm__3dXPo\",\"itemInput\":\"ContactForm_itemInput__1FeeD\",\"itemBlock\":\"ContactForm_itemBlock__krhiD\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item__filter\":\"Filter_item__filter__3dwFh\",\"item__element\":\"Filter_item__element__2tQ6h\",\"item__text-filter\":\"Filter_item__text-filter__33jnI\"};","export const getIsAuthenticated = state => state.auth.isAuthenticated;\r\nexport const getUserName = state => state.auth.user.name;","import React from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport { NavLink } from 'react-router-dom';\r\nimport { getIsAuthenticated } from './redux/auth/auth-selectors';\r\n\r\n\r\nfunction Navigation() {\r\n    const isLoading = useSelector(getIsAuthenticated);\r\n\r\n    return (\r\n        <nav>\r\n            <NavLink className=\"navLink\" to=\"/\" exact>\r\n                Home\r\n            </NavLink>\r\n            {isLoading && (\r\n                <NavLink className=\"navLink\" to=\"/contacts\" exact>\r\n                    Contacts\r\n                </NavLink>\r\n            )}\r\n        </nav>\r\n    );\r\n}\r\n\r\nexport default Navigation;","import { createAsyncThunk } from \"@reduxjs/toolkit\";\r\nimport axios from 'axios';\r\n\r\n\r\naxios.defaults.baseURL = 'https://connections-api.herokuapp.com';\r\n\r\nconst token = {\r\n    set(token) {\r\n        axios.defaults.headers.common.Authorization = `Bearer ${token}`;\r\n    },\r\n\r\n    unset() {\r\n        axios.defaults.headers.common.Authorization = '';\r\n    },\r\n};\r\n\r\nexport const register = createAsyncThunk(\r\n    'auth/register',\r\n    async (credentials, { rejectWithValue }) => {\r\n        try {\r\n            const response = await axios.post('/users/signup', credentials);\r\n            token.set(response.data.token);\r\n            return response.data;\r\n        } catch (error) {\r\n            return rejectWithValue(error);\r\n        }\r\n    },\r\n);\r\n\r\nexport const logIn = createAsyncThunk(\r\n    'auth/login',\r\n    async (credentials, { rejectWithValue }) => {\r\n        try {\r\n            const response = await axios.post('/users/login', credentials);\r\n            token.set(response.data.token);\r\n            return response.data;\r\n        } catch (error) {\r\n            return rejectWithValue(error);        }\r\n    },\r\n);\r\n\r\nexport const logOut = createAsyncThunk(\r\n    'auth/logout',\r\n    async (_, { rejectWithValue }) => {\r\n        try {\r\n            await axios.post('/users/logout');\r\n            token.unset();\r\n        } catch (error) {\r\n            return rejectWithValue(error);\r\n        }\r\n    },\r\n);\r\n\r\nexport const getCurrentUser = createAsyncThunk(\r\n    'auth/getCurrentUser',\r\n    async (_, thunkAPI) => {\r\n        const state = thunkAPI.getState();\r\n        const persistedToken = state.auth.token;\r\n\r\n        if (persistedToken === null) {\r\n            return thunkAPI.rejectWithValue();\r\n        }\r\n\r\n        token.set(persistedToken);\r\n        try {\r\n            const { data } = await axios.get('/users/current');\r\n            return data;\r\n        } catch (error) {\r\n            return error.rejectWithValue();\r\n        }\r\n    },\r\n);","import React from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { getUserName } from '../redux/auth/auth-selectors';\r\nimport { logOut } from '../redux/auth/auth-operations';\r\n\r\nimport './UserMenu.module.css';\r\nimport Button from '@material-ui/core/Button';\r\n\r\n\r\nfunction UserMenu() {\r\n    const name = useSelector(getUserName);\r\n    const dispatch = useDispatch();\r\n\r\n    const onLogOut = () => dispatch(logOut());\r\n\r\n    return (\r\n        <div className=\"container__menu\">\r\n            <span className=\"avatar__menu\"> </span>\r\n            <span className=\"name__menu\"> {name}</span>\r\n            <Button\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                size=\"small\"\r\n                type=\"submit\"\r\n                onClick={onLogOut}\r\n            >\r\n                Logout\r\n            </Button>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default UserMenu;","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\n\r\nconst AuthNav = () => (\r\n    <div>\r\n        <NavLink to=\"/register\" exact className=\"navLink\">\r\n            Sign Up\r\n        </NavLink>\r\n        <NavLink to=\"/login\" exact className=\"navLink\">\r\n            Sign In\r\n        </NavLink>\r\n    </div>\r\n);\r\n\r\nexport default AuthNav;","import React from 'react';\r\nimport Navigation from './Navigation';\r\nimport UserMenu from './UserMenu/UserMenu';\r\nimport AuthNav from './AuthNav';\r\nimport { getIsAuthenticated } from './redux/auth/auth-selectors';\r\nimport { useSelector } from 'react-redux';\r\n\r\nfunction AppBar() {\r\n    const isAuthenticated = useSelector(getIsAuthenticated);\r\n\r\n    return (\r\n        <>\r\n            <header className=\"heder__styles\">\r\n                <Navigation />\r\n                {isAuthenticated ? <UserMenu /> : <AuthNav />}\r\n            </header>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default AppBar;","import React, { useState } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { register } from 'components/redux/auth/auth-operations';\r\n\r\nimport './ViewPage.css';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Container from '@material-ui/core/Container';\r\n\r\n\r\nfunction RegisterWiew() {\r\n    const [name, setName] = useState('');\r\n    const [email, setEmail] = useState('');\r\n    const [password, setPassword] = useState('');\r\n    const dispatch = useDispatch();\r\n    \r\n    const handleChange = ({ target }) => {\r\n        const { name, value } = target;\r\n        switch (name) {\r\n            case 'name':\r\n                setName(value);\r\n                break;\r\n            case 'email':\r\n                setEmail(value);\r\n                break;\r\n            case 'password':\r\n                setPassword(value);\r\n                break;\r\n            default:\r\n                return;\r\n        }\r\n    };\r\n\r\n    const handleSubmit = event => {\r\n        event.preventDefault();\r\n        dispatch(register({ name, email, password }));\r\n        reset();\r\n    };\r\n\r\n    const reset = () => {\r\n        setName('');\r\n        setEmail('');\r\n        setPassword('');\r\n    };\r\n\r\n    return (\r\n        <Container component=\"main\" maxWidth=\"xs\">\r\n            <div className=\"container__login\">\r\n                <div className=\"avatar__class\">\r\n                    <Avatar>\r\n                        <LockOutlinedIcon />\r\n                    </Avatar>\r\n                </div>\r\n\r\n                <Typography component=\"h1\" variant=\"h5\">\r\n                    Sign up\r\n                </Typography>\r\n                <form onSubmit={handleSubmit} noValidate>\r\n                    <div className=\"input__reg\">\r\n                        <TextField\r\n                            type=\"text\"\r\n                            variant=\"outlined\"\r\n                            margin=\"normal\"\r\n                            required\r\n                            fullWidth\r\n                            label=\"Name\"\r\n                            name=\"name\"\r\n                            value={name}\r\n                            autoComplete=\"fname\"\r\n                            autoFocus\r\n                            onChange={handleChange}\r\n                        />\r\n                    </div>\r\n                    <div className=\"input__reg\">\r\n                        <TextField\r\n                            variant=\"outlined\"\r\n                            required\r\n                            fullWidth\r\n                            label=\"Email Address\"\r\n                            name=\"email\"\r\n                            value={email}\r\n                            autoComplete=\"email\"\r\n                            onChange={handleChange}\r\n                        />\r\n                    </div>\r\n                    <div className=\"input__reg\">\r\n                        <TextField\r\n                            variant=\"outlined\"\r\n                            required\r\n                            fullWidth\r\n                            label=\"Password\"\r\n                            name=\"password\"\r\n                            type=\"password\"\r\n                            value={password}\r\n                            autoComplete=\"current-password\"\r\n                            onChange={handleChange}\r\n                        />\r\n                    </div>\r\n\r\n                    <Button type=\"submit\" fullWidth variant=\"contained\" color=\"primary\">\r\n                        Sign Up\r\n                    </Button>\r\n                </form>\r\n            </div>\r\n        </Container>\r\n    );\r\n}\r\n\r\nexport default RegisterWiew;","import React, { useState } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { logIn } from 'components/redux/auth/auth-operations';\r\n\r\nimport './ViewPage.css';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Container from '@material-ui/core/Container';\r\n\r\n\r\nfunction LoginWiew() {\r\n    const [email, setEmail] = useState('');\r\n    const [password, setPassword] = useState('');\r\n    const dispatch = useDispatch();\r\n\r\n    const handleChange = ({ target }) => {\r\n        const { name, value } = target;\r\n        switch (name) {\r\n            case 'email':\r\n                setEmail(value);\r\n                break;\r\n            case 'password':\r\n                setPassword(value);\r\n                break;\r\n            default:\r\n                return;\r\n        }\r\n    };\r\n\r\n    const handleSubmit = event => {\r\n        event.preventDefault();\r\n        dispatch(logIn({ email, password }));\r\n        reset();\r\n    };\r\n\r\n    const reset = () => {\r\n        setEmail('');\r\n        setPassword('');\r\n    };\r\n\r\n    return (\r\n        <Container component=\"main\" maxWidth=\"xs\">\r\n            <div className=\"container__login\">\r\n                <div className=\"avatar__class\">\r\n                    <Avatar>\r\n                        <LockOutlinedIcon />\r\n                    </Avatar>\r\n                </div>\r\n\r\n                <Typography component=\"h1\" variant=\"h5\">\r\n                    Sign In\r\n                </Typography>\r\n                <form onSubmit={handleSubmit} noValidate>\r\n                    <TextField\r\n                        variant=\"outlined\"\r\n                        margin=\"normal\"\r\n                        required\r\n                        fullWidth\r\n                        label=\"Email\"\r\n                        type=\"email\"\r\n                        name=\"email\"\r\n                        value={email}\r\n                        autoComplete=\"email\"\r\n                        autoFocus\r\n                        onChange={handleChange}\r\n                    />\r\n                    <TextField\r\n                        variant=\"outlined\"\r\n                        margin=\"normal\"\r\n                        required\r\n                        fullWidth\r\n                        label=\"Password\"\r\n                        name=\"password\"\r\n                        value={password}\r\n                        autoComplete=\"current-password\"\r\n                        onChange={handleChange}\r\n                    />\r\n\r\n                    <Button type=\"submit\" fullWidth variant=\"contained\" color=\"primary\">\r\n                        Sign In\r\n                    </Button>\r\n                </form>\r\n            </div>\r\n        </Container>\r\n    );\r\n}\r\n\r\nexport default LoginWiew;","export const getContact = state => state.contacts.contact;\r\nexport const getFilter = state => state.contacts.filter;\r\nexport const getLoading = state => state.contact.loading;\r\n\r\nexport const getVisibleContact = state => {\r\n    const contacts = getContact(state);\r\n    const filter = getFilter(state);\r\n\r\n    const getFiteredContact = contacts => {\r\n        const normalizedFilter = filter.toLowerCase();\r\n        return contacts.filter(text =>\r\n            text.name.toLowerCase().includes(normalizedFilter),\r\n        );\r\n    };\r\n\r\n    return getFiteredContact(contacts);\r\n};","import axios from \"axios\";\r\nimport { createAsyncThunk } from '@reduxjs/toolkit';\r\n\r\n\r\nexport const fetchContact = createAsyncThunk(\r\n    'contact/fetchContact',\r\n    async (_, { rejectWithValue }) => {\r\n        try {\r\n            const { data } = await axios.get(`/contacts`);\r\n            return data;\r\n        } catch (error) {\r\n            return rejectWithValue(error);\r\n        }\r\n    },\r\n);\r\n\r\nexport const addContact = createAsyncThunk(\r\n    'contact/addContact',\r\n    async ({ name , number } , { rejectWithValue }) => {\r\n        const contact = { name, number };\r\n        try {\r\n            const { data } = await axios.post(`/contacts`, contact);\r\n            return data;\r\n        } catch (error) {\r\n            return rejectWithValue(error);\r\n        }\r\n    },\r\n);\r\n        \r\nexport const deleteContact = createAsyncThunk(\r\n    'contact/deleteContact',\r\n    async (contactId, { rejectWithValue }) => {\r\n        try {\r\n            await axios.delete(`/contacts/${contactId}`);\r\n            return contactId;\r\n        } catch (error) {\r\n            return rejectWithValue(error);\r\n        }\r\n    },\r\n);\r\n\r\nexport const updateContact = createAsyncThunk(\r\n    'contact/updateContact',\r\n    async ({ contactId, name, number }, { rejectWithValue }) => {\r\n        const contact = { name, number };\r\n        try {\r\n            const { data } = await axios.patch(`/contacts/${contactId}`, contact);\r\n            console.log(data);\r\n            return data;\r\n        } catch (error) {\r\n            return rejectWithValue(error);\r\n        }\r\n    },\r\n);","import { useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { getContact } from '../redux/contact/contact-selector';\r\nimport { addContact } from '../redux/contact/contact-operations';\r\n\r\nimport './ContactForm.module.css';\r\nimport SaveIcon from '@material-ui/icons/Save';\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport InputMask from 'react-input-mask';\r\n\r\n\r\nfunction ContactForm() {\r\n  const [name, setName] = useState('');\r\n  const [number, setNumber] = useState('');\r\n  const contacts = useSelector(getContact);\r\n  const dispatch = useDispatch();\r\n\r\n  const handleChange = ({ target }) => {\r\n    const { name, value } = target;\r\n    switch (name) {\r\n      case 'name':\r\n        setName(value);\r\n        break;\r\n      case 'number':\r\n        setNumber(value);\r\n        break;\r\n      default:\r\n        return;\r\n    }\r\n  };\r\n\r\n  const handleSubmit = event => {\r\n    event.preventDefault();\r\n    \r\n    const auditContact = contacts.find(\r\n      contact => contact.name.toLowerCase() === name.toLowerCase(),\r\n    );\r\n    if (auditContact) {\r\n      alert(`Контакт ${name} з таким іменем вже існує.`);\r\n      reset();\r\n      return;\r\n    }\r\n    dispatch(addContact({ name, number }));\r\n    reset();\r\n  };\r\n\r\n  const reset = () => {\r\n    setName('');\r\n    setNumber('');\r\n  };\r\n\r\n\r\n  return (\r\n    <>\r\n      <form onSubmit={handleSubmit} className=\"itemForm\" autoComplete=\"off\" noValidate>\r\n        <div className=\"item__input\">\r\n          <TextField\r\n            size=\"small\"\r\n            label=\"Name\"\r\n            variant=\"outlined\"\r\n            type=\"text\"\r\n            name=\"name\"\r\n            placeholder=\"Jack Sparrow\"\r\n            value={name}\r\n            onChange={handleChange}\r\n          />\r\n        </div>\r\n        <div className=\"item__input\">\r\n          <InputMask\r\n            mask=\"(999)999-99-99\"\r\n            maskChar={null}\r\n            size=\"small\"\r\n            label=\"Phone\"\r\n            variant=\"outlined\"\r\n            type=\"text\"\r\n            name=\"number\"\r\n            value={number}\r\n            onChange={handleChange}\r\n          >\r\n            {inputProps => (\r\n              <TextField\r\n                {...inputProps}\r\n                type=\" number \"\r\n                variant=\"outlined\"\r\n              />\r\n            )}\r\n          </InputMask>\r\n        </div>\r\n\r\n        <div className=\"item__input\">\r\n          <Button \r\n            variant=\"contained\"\r\n            type=\"submit\"\r\n            color=\"primary\"\r\n            disabled={name === '' || number === ''}\r\n            startIcon={<SaveIcon />}  \r\n          >\r\n            Зберегти\r\n          </Button>\r\n        </div>\r\n      </form>\r\n    </>\r\n  );\r\n}\r\n  \r\nexport default ContactForm;","import PropTypes from 'prop-types';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { deleteContact} from '../redux/contact/contact-operations';\r\nimport { getVisibleContact } from '../redux/contact/contact-selector';\r\n\r\nimport './ContactList.module.css';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport Button from '@material-ui/core/Button';\r\nimport BorderColorIcon from '@material-ui/icons/BorderColor';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport { Link, useLocation } from 'react-router-dom';\r\n\r\n\r\nfunction ContactList() {\r\n  const contacts = useSelector(getVisibleContact);\r\n  const dispatch = useDispatch();\r\n  const location = useLocation();\r\n\r\n  const onDeleteContact = id => dispatch(deleteContact(id));\r\n\r\n  return (\r\n    <>\r\n      {!contacts.length && <div>Немає жодного контакту.</div>}\r\n\r\n      <List>\r\n        {contacts.map(({ id, name, number }) => (\r\n          <ListItem key={id}>\r\n            <ListItemAvatar>\r\n              <Avatar></Avatar>\r\n            </ListItemAvatar>\r\n            <ListItemText primary={name} secondary={number} />\r\n            <Link\r\n              className=\"button__mardg\"\r\n              to={{\r\n                pathname: `/contacts/${id}`,\r\n                state: { from: location },\r\n                name: name,\r\n                number: number,\r\n              }}\r\n            >\r\n              <Button\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                size=\"small\"\r\n                startIcon={<BorderColorIcon />}\r\n              >\r\n                Редагувати\r\n              </Button>\r\n            </Link>\r\n\r\n            <Button\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              size=\"small\"\r\n              startIcon={<DeleteIcon />}\r\n              onClick={() => onDeleteContact(id)}\r\n            >\r\n              Видалити\r\n            </Button>\r\n          </ListItem>\r\n        ))}\r\n      </List>\r\n    </>\r\n  );\r\n}\r\n\r\nContactList.propTypes = {\r\n  contacts: PropTypes.arrayOf(PropTypes.object),\r\n};\r\n  \r\nexport default ContactList;","import { createAction } from '@reduxjs/toolkit';\r\n\r\nconst changeFilter = createAction('contact/changeFilter');\r\n\r\nconst actions = { changeFilter };\r\n\r\nexport default actions;","import { useDispatch, useSelector } from \"react-redux\";\r\nimport actions from \"components/redux/contact/contact-action\";\r\nimport { getFilter } from '../redux/contact/contact-selector';\r\n\r\nimport './Filter.module.css';\r\nimport TextField from '@material-ui/core/TextField';\r\n\r\n\r\nfunction Filter() {\r\n  const value = useSelector(getFilter);\r\n  const dispatch = useDispatch();\r\n\r\n  return (\r\n    <TextField\r\n      size=\"small\"\r\n      label=\"Search\"\r\n      variant=\"outlined\"\r\n      type=\"text\"\r\n      value={value}\r\n      onChange={event => dispatch(actions.changeFilter(event.target.value))}\r\n    />\r\n  );\r\n}\r\n\r\nexport default Filter;","import { useEffect } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport ContactForm from \"components/ContactForm/ContactForm\";\r\nimport ContactList from \"components/ContactList/ContactList\";\r\nimport Filter from \"components/Filter/Filter\";\r\nimport { fetchContact } from \"components/redux/contact/contact-operations\";\r\n\r\n\r\nfunction ContactView() {\r\n    const dispatch = useDispatch();\r\n    // eslint-disable-next-line\r\n    useEffect(() => dispatch(fetchContact()), []);\r\n    \r\n    return(\r\n        <>\r\n            <ContactForm />\r\n            <Filter />\r\n            <ContactList />\r\n        </>\r\n    );\r\n}\r\n\r\nexport default ContactView;","import { Route, Redirect } from 'react-router-dom';\r\nimport { useSelector } from 'react-redux';\r\nimport { getIsAuthenticated } from './redux/auth/auth-selectors';\r\n\r\nfunction PrivateRoute({ redirectTo, children, ...routeProps }) {\r\n    const isLoggedIn = useSelector(getIsAuthenticated);\r\n\r\n    return (\r\n        <Route {...routeProps}>\r\n            {isLoggedIn ? children : <Redirect to={redirectTo} />}\r\n        </Route>\r\n    );\r\n}\r\n\r\nexport default PrivateRoute;\r\n","import React from 'react';\r\nimport { Route, Redirect } from 'react-router-dom';\r\nimport { useSelector } from 'react-redux';\r\nimport { getIsAuthenticated } from './redux/auth/auth-selectors';\r\n\r\n\r\nfunction PublicRoute({ redirectTo, children, ...routeProps }) {\r\n    const isLoggedIn = useSelector(getIsAuthenticated);\r\n\r\n    return (\r\n        <Route {...routeProps}>\r\n            {isLoggedIn && routeProps.restricted ? (\r\n                <Redirect to={redirectTo} />\r\n            ) : (\r\n                children\r\n            )}\r\n        </Route>\r\n    );\r\n}\r\n\r\nexport default PublicRoute;","import React from \"react\";\r\n\r\nconst HomePage = () => (\r\n    <div className=\"container__home\">\r\n        <h1 className=\"title__home\">Вітаю</h1>\r\n    </div>\r\n);\r\n\r\nexport default HomePage;","import { useHistory, useLocation, useParams } from \"react-router-dom\";\r\nimport { useState } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { updateContact } from \"components/redux/contact/contact-operations\";\r\n\r\nimport './ContactList.module.css';\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport InputMask from 'react-input-mask';\r\n\r\n\r\nfunction ContactEdit() {\r\n    const { contactId } = useParams();\r\n    const location = useLocation();\r\n    const [name, setName] = useState(location.name);\r\n    const [number, setNumber] = useState(location.number);\r\n    const history = useHistory();\r\n    const dispatch = useDispatch();\r\n\r\n    const handleChange = ({ target }) => {\r\n        const { name, value } = target;\r\n        switch (name) {\r\n            case 'name':\r\n                setName(value);\r\n                break;\r\n            case 'number':\r\n                setNumber(value);\r\n                break;\r\n            default:\r\n                return;\r\n        }\r\n    };\r\n\r\n    const handleSubmit = event => {\r\n        event.preventDefault();\r\n\r\n        dispatch(updateContact({ contactId, name, number }));\r\n        history.push(location?.state?.from ?? '/');\r\n        return;\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <form\r\n                noValidate\r\n                autoComplete=\"off\"\r\n                onSubmit={handleSubmit}\r\n                className=\"item__form-edit\"\r\n            >\r\n                <div className=\"item__input-edit\">\r\n                    <TextField\r\n                        size=\"small\"\r\n                        label=\"Name\"\r\n                        variant=\"outlined\"\r\n                        type=\"text\"\r\n                        name=\"name\"\r\n                        placeholder=\"Jack Sparrow\"\r\n                        value={name}\r\n                        onChange={handleChange}\r\n                    />\r\n                </div>\r\n                <div className=\"item__input-edit\">\r\n                    <InputMask\r\n                        mask=\"(999)999-99-99\"\r\n                        maskChar={null}\r\n                        size=\"small\"\r\n                        label=\"Phone\"\r\n                        variant=\"outlined\"\r\n                        type=\"text\"\r\n                        name=\"number\"\r\n                        value={number}\r\n                        onChange={handleChange}\r\n                    >\r\n                        {inputProps => (\r\n                            <TextField\r\n                                {...inputProps}\r\n                                type=\" number \"\r\n                                variant=\"outlined\"\r\n                            />\r\n                        )}\r\n                    </InputMask>\r\n                </div>\r\n\r\n                <div className=\"item__input\">\r\n                    <Button\r\n                        variant=\"contained\"\r\n                        color=\"primary\"\r\n                        type=\"submit\"\r\n                        disabled={name === '' || number === ''}\r\n                    >\r\n                        Оновити контакт\r\n                    </Button>\r\n                </div>\r\n            </form>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default ContactEdit;","import { Switch } from 'react-router-dom';\r\nimport AppBar from 'components/AppBar';\r\nimport RegisterWiew from 'components/views/RegisterView';\r\nimport LoginWiew from 'components/views/LoginView';\r\nimport ContactView from 'components/views/ContactView';\r\nimport PrivateRoute from 'components/PrivateRoute';\r\nimport PublicRoute from 'components/PublicRoute';\r\nimport HomePage from 'components/views/HomePage';\r\nimport ContactEdit from 'components/ContactList/ContactEdit';\r\nimport { useEffect } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { getCurrentUser } from 'components/redux/auth/auth-operations';\r\n\r\nimport './App.css';\r\n\r\n\r\nfunction App() {\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => dispatch(getCurrentUser()), [dispatch]);\r\n\r\n  return (\r\n    <div className=\"Container\">\r\n      <AppBar />\r\n\r\n      <Switch>\r\n        <PublicRoute exact path=\"/\">\r\n          <HomePage />\r\n        </PublicRoute>\r\n\r\n        <PublicRoute path=\"/register\" redirectTo=\"/contacts\" restricted>\r\n          <RegisterWiew />\r\n        </PublicRoute>\r\n\r\n        <PublicRoute path=\"/login\" redirectTo=\"/contacts\" restricted>\r\n          <LoginWiew />\r\n        </PublicRoute>\r\n\r\n        <PrivateRoute exact path=\"/contacts\" redirectTo=\"/login\">\r\n          <ContactView />\r\n        </PrivateRoute>\r\n\r\n        <PrivateRoute path=\"/contacts/:contactId\" redirectTo=\"/login\">\r\n          <ContactEdit />\r\n        </PrivateRoute>\r\n      </Switch>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;","import { combineReducers, createReducer } from '@reduxjs/toolkit';\r\nimport { register, logIn, logOut, getCurrentUser } from './auth-operations';\r\n\r\n\r\nconst initialUserState = { name: null, email: null };\r\n\r\nconst user = createReducer(initialUserState, {\r\n    [register.fulfilled]: (_, { payload }) => payload.user,\r\n    [logIn.fulfilled]: (_, { payload }) => payload.user,\r\n    [logOut.fulfilled]: () => initialUserState,\r\n    [getCurrentUser.fulfilled]: (_, { payload }) => payload,\r\n});\r\n\r\nconst token = createReducer (null, {\r\n    [register.fulfilled]: (_, { payload }) => payload.token,\r\n    [logIn.fulfilled]: (_, { payload }) => payload.token,\r\n    [logOut.fulfilled]: () => null,\r\n});\r\n\r\nconst setError = (_, { payload }) => payload;\r\n\r\nconst error = createReducer(null, {\r\n    [register.rejected]: setError,\r\n    [logIn.rejected]: setError,\r\n    [logOut.rejected]: setError,\r\n    [getCurrentUser.rejected]: setError,\r\n});\r\n\r\nconst isAuthenticated = createReducer(false, {\r\n    [register.fulfilled]: () => true,\r\n    [register.rejected]: () => false,\r\n    [logIn.fulfilled]: () => true,\r\n    [logIn.rejected]: () => false,\r\n    [logOut.fulfilled]: () => false,\r\n    [getCurrentUser.fulfilled]: () => true,\r\n    [getCurrentUser.rejected]: () => false,\r\n});\r\n\r\nexport default combineReducers({\r\n    user,\r\n    token,\r\n    error,\r\n    isAuthenticated,\r\n});\r\n\r\n\r\n","import { combineReducers } from \"redux\";\r\nimport actions from \"./contact-action\";\r\nimport { fetchContact, addContact, deleteContact, updateContact } from './contact-operations';\r\nimport { createReducer } from \"@reduxjs/toolkit\";\r\n\r\n\r\nconst contact = createReducer([], {\r\n    [fetchContact.fulfilled]: (_, { payload }) => payload,\r\n    [addContact.fulfilled]: (state, { payload }) => [...state, payload],\r\n    [deleteContact.fulfilled]: (state, { payload }) =>\r\n        state.filter(contact => contact.id !== payload),\r\n\r\n    [updateContact.fulfilled]: (state, { payload }) => \r\n        state.map(contact => (contact.id === payload.id ? payload : contact)),\r\n});\r\n\r\nconst filter = createReducer('', {\r\n    [actions.changeFilter]: (_, { payload }) => payload,\r\n});\r\n\r\nconst error = createReducer(null, {\r\n    [fetchContact.rejected]: (_, { payload }) => payload,\r\n    [fetchContact.pending]: () => null,\r\n});\r\n\r\nconst loading = createReducer(false, {\r\n    [fetchContact.pending]: () => true,\r\n    [fetchContact.fulfilled]: () => false,\r\n    [fetchContact.rejected]: () => false,\r\n    [addContact.pending]: () => true,\r\n    [addContact.fulfilled]: () => false,\r\n    [addContact.rejected]: () => false,\r\n    [deleteContact.pending]: () => true,\r\n    [deleteContact.fulfilled]: () => false,\r\n    [deleteContact.rejected]: () => false,\r\n    [updateContact.pending]: () => true,\r\n    [updateContact.fulfilled]: () => false,\r\n    [updateContact.rejected]: () => false,\r\n});\r\n\r\nexport default combineReducers({\r\n    contact,\r\n    loading,\r\n    filter,\r\n    error,\r\n});","import authReducer from './auth/auth-reducers';\r\nimport contactReducer from './contact/contact-reducer';\r\nimport { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit';\r\n\r\nimport {\r\n  persistStore,\r\n  persistReducer,\r\n  FLUSH,\r\n  REHYDRATE,\r\n  PAUSE,\r\n  PERSIST,\r\n  PURGE,\r\n  REGISTER,\r\n} from 'redux-persist';\r\nimport logger from 'redux-logger';\r\nimport storage from 'redux-persist/lib/storage';\r\n\r\n\r\nconst middleware = [\r\n    ...getDefaultMiddleware({\r\n        serializableCheck: {\r\n        ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\r\n        },\r\n    }),\r\n    logger,\r\n];\r\n\r\nconst authPersistConfig = {\r\n    key: 'auth',\r\n    storage,\r\n    whitelist: ['token'],\r\n};\r\n\r\nexport const store = configureStore({\r\n    reducer: {\r\n      auth: persistReducer(authPersistConfig, authReducer),\r\n      contacts: contactReducer,\r\n    },\r\n    devTools: process.env.NODE_ENV === 'development',\r\n    middleware,\r\n});\r\n\r\nexport const persistor = persistStore(store);","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { BrowserRouter } from 'react-router-dom';\r\nimport App from './App';\r\nimport { Provider } from 'react-redux';\r\nimport { store, persistor } from 'components/redux/store';\r\nimport { PersistGate } from 'redux-persist/integration/react';\r\n\r\nimport 'index.css';\r\n\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      <PersistGate loading={null} persistor={persistor}>\r\n        <BrowserRouter>\r\n          <App />\r\n        </BrowserRouter>\r\n      </PersistGate>\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root'),\r\n);","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item__contact\":\"ContactList_item__contact__20JL4\",\"item__form-edit\":\"ContactList_item__form-edit__7A-96\",\"item__input-edit\":\"ContactList_item__input-edit__2P0Jp\",\"button__mardg\":\"ContactList_button__mardg__FtBWj\"};"],"sourceRoot":""}