{"version":3,"sources":["components/ContactForm/ContactForm.module.css","components/ContactList/ContactList.module.css","components/Filter/Filter.module.css","components/redux/contact/contact-selector.js","components/redux/contact/contact-action.js","components/redux/contact/contact-operations.js","components/ContactForm/ContactForm.js","components/Filter/Filter.js","components/ContactList/ContactList.js","App.js","components/redux/contact/contact-reducer.js","components/redux/store.js","index.js"],"names":["module","exports","getContact","state","contacts","contact","getFilter","filter","getVisibleContact","normalizedFilter","toLowerCase","text","name","includes","getFiteredContact","changeFilter","createAction","actions","fetchContactRequest","fetchContactSuccess","fetchContactError","addContactRequest","addContactSuccess","addContactError","deleteContactRequest","deleteContactSuccess","deleteContactError","axios","defaults","baseURL","fetchContact","createAsyncThunk","_","a","rejectWithValue","get","data","addContact","number","dispatch","post","deleteContact","contactId","delete","ContactForm","useState","setName","setNumber","useSelector","useDispatch","handleChange","target","value","reset","onSubmit","event","preventDefault","find","alert","className","styles","itemForm","itemBlock","label","Input","type","placeholder","onChange","itemInput","Button","color","button","disabled","Filter","itemFilter","itemTextFilter","itemElement","ContactList","useEffect","length","map","id","item__contact","item__text","item__button","onClick","onDeleteContact","App","style","textAlign","bigText","createReducer","fulfilled","payload","error","rejected","pending","isLoading","combineReducers","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","logger","persistConfig","key","storage","blacklist","rootReducer","contactReducer","persistedReducer","persistReducer","store","configureStore","reducer","devTools","process","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.36ea7508.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"ContactForm_label__378f8\",\"input\":\"ContactForm_input__gm87B\",\"itemForm\":\"ContactForm_itemForm__E58BF\",\"itemInput\":\"ContactForm_itemInput__2wqEf\",\"itemBlock\":\"ContactForm_itemBlock__ozs_K\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item__contact\":\"ContactList_item__contact__2MFwC\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"itemFilter\":\"Filter_itemFilter__l9hXF\",\"itemElement\":\"Filter_itemElement__3si-S\",\"itemTextFilter\":\"Filter_itemTextFilter__sUsO3\"};","export const getContact = state => state.contacts.contact;\nexport const getFilter = state => state.contacts.filter;\n\nexport const getVisibleContact = state => {\n    const contacts = getContact(state);\n    const filter = getFilter(state);\n\n    const getFiteredContact = contacts => {\n    const normalizedFilter = filter.toLowerCase();\n    return contacts.filter(text =>\n        text.name.toLowerCase().includes(normalizedFilter),\n    );\n    };\n\n    return getFiteredContact(contacts);\n};","import { createAction } from '@reduxjs/toolkit';\n\nconst changeFilter = createAction('contact/changeFilter');\n\n// const actions = { changeFilter };\n\n\n\n// fetchContact.pending\nconst fetchContactRequest = createAction('contact/fetchContactRequest');\n// fetchContact.fulfilled\nconst fetchContactSuccess = createAction('contact/fetchContactSuccess');\n// fetchContact.rejected\nconst fetchContactError = createAction('contact/fetchContactError');\n\nconst addContactRequest = createAction('contact/addContactRequest');\nconst addContactSuccess = createAction('contact/addContactSuccess');\nconst addContactError = createAction('contact/addContactError');\n\nconst deleteContactRequest = createAction('contacn/deleteContactRequest');\nconst deleteContactSuccess = createAction('contact/deleteContactSuccess');\nconst deleteContactError = createAction('contact/deleteContactError');\n\n\nconst actions = {\n    fetchContactRequest,\n    fetchContactSuccess,\n    fetchContactError,\n    addContactRequest,\n    addContactSuccess,\n    addContactError,\n    deleteContactRequest,\n    deleteContactSuccess,\n    deleteContactError,\n  \n    changeFilter,\n  };\n\nexport default actions;","import axios from \"axios\";\nimport { createAsyncThunk } from '@reduxjs/toolkit';\nimport actions from './contact-action';\n\naxios.defaults.baseURL = 'http://localhost:4040';\n\n\n\nexport const fetchContact = createAsyncThunk(\n    'contact/fetchContact',\n    async (_, { rejectWithValue }) => {\n        try {\n            const { data } = await axios.get(`/contact`);\n            return data;\n        } catch (error) {\n            return rejectWithValue(error);\n        }\n    },\n);\n\n// export const addContact = createAsyncThunk(\n//     'contact/addContact',\n//     async (data, { rejectWithValue }) => {\n//     const contact = { name: data, number: data };\n//     try {\n//         const { data } = await axios.post(`/contact`, contact);\n//         return data;\n//     } catch (error) {\n//         return rejectWithValue(error);\n//       }\n//     },\n// );\n\nexport const addContact = (name, number) => async dispatch => {\n  const contact = { name, number };\n  dispatch(actions.addContactRequest());\n  try {\n    const { data } = await axios.post(`/contact`, contact);\n    dispatch(actions.addContactSuccess(data));\n  } catch (error) {\n    dispatch(actions.addContactError(error));\n  }\n};\n\n        \nexport const deleteContact = createAsyncThunk(\n    'contact/deleteContact',\n    async (contactId, { rejectWithValue }) => {\n        try {\n            await axios.delete(`/contact/${contactId}`);\n            return contactId;\n        } catch (error) {\n            return rejectWithValue(error);\n        }\n    },\n);\n\n\n// export const fetchContact = () => async (dispatch) => {\n//   dispatch(actions.fetchContactRequest());\n//   try {\n//     const { data } = await axios.get(`/contact`);\n//     dispatch(actions.fetchContactSuccess(data));\n//   } catch (error) {\n//     dispatch(actions.fetchContactError(error));\n//   }\n// };\n\n\n// export const deleteContact = contactId => async dispatch => {\n//   dispatch(actions.deleteContactRequest());\n//   try {\n//     await axios.delete(`/contact/${contactId}`);\n//     dispatch(actions.deleteContactSuccess(contactId));\n//   } catch (error) {\n//     dispatch(actions.deleteContactError(error));\n//   }\n// };","import { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { getContact } from '../redux/contact/contact-selector';\nimport { addContact } from '../redux/contact/contact-operations';\n\nimport styles from './ContactForm.module.css';\nimport { Input } from '@material-ui/core';\nimport { Button } from '@material-ui/core';\n\n\nfunction ContactForm() {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n  const contacts = useSelector(getContact);\n  const dispatch = useDispatch();\n\n  const handleChange = ({ target }) => {\n    const { name, value } = target;\n    switch (name) {\n      case 'name':\n        setName(value);\n        break;\n      case 'number':\n        setNumber(value);\n        break;\n      default:\n        return;\n    }\n  };\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    \n    const auditContact = contacts.find(\n      contact => contact.name.toLowerCase() === name.toLowerCase(),\n    );\n    if (auditContact) {\n      alert(`Контакт ${name} з таким іменем вже існує.`);\n      reset();\n      return;\n    }\n    dispatch(addContact(name, number));\n    reset();\n  };\n\n  const reset = () => {\n    setName('');\n    setNumber('');\n  };\n\n\n  return (\n    <form onSubmit={handleSubmit} className={styles.itemForm}>\n      <div className={styles.itemBlock}>\n        <label className={styles.label}>\n          Ім'я:\n            <Input\n              type=\"text\"\n              name=\"name\"\n              value={name}\n              placeholder=\"Jack Sparrow\"\n              onChange={handleChange}\n              className={styles.itemInput}\n            />\n        </label>\n\n        <label className={styles.label}>\n          Номер:\n            <Input\n              type=\"text\"\n              name=\"number\"\n              value={number}\n              placeholder=\"111-11-11\"\n              onChange={handleChange}\n              className={styles.itemInput}\n            />\n        </label>\n      </div>\n\n      <Button type=\"submit\" color=\"primary\" className={styles.button} disabled={name === '' || number === ''}>\n        Додати контакт\n      </Button>\n    </form>\n  );\n}\n  \nexport default ContactForm;","import { useDispatch, useSelector } from \"react-redux\";\n// import actions from \"components/redux/contact/contact-operations\";\nimport actions from '../redux/contact/contact-action';\n// import { getFilter } from \"components/redux/contact/contact-selector\";\nimport { getFilter } from '../redux/contact/contact-selector';\n\nimport styles from './Filter.module.css';\nimport { Input } from '@material-ui/core';\n\n\nfunction Filter() {\n  const value = useSelector(getFilter);\n  const dispatch = useDispatch();\n\n  return (\n    <label className={styles.itemFilter}>\n      <p className={styles.itemTextFilter}>Пошук контактів</p>\n      <Input\n        className={styles.itemElement}\n        type=\"text\"\n        value={value}\n        onChange={event => dispatch(actions.changeFilter(event.target.value))}\n      />\n    </label>\n  );\n}\n\nexport default Filter;","import PropTypes from 'prop-types';\nimport { useDispatch, useSelector } from 'react-redux';\nimport {\n  fetchContact,\n  deleteContact,\n} from '../redux/contact/contact-operations';\n\n\n\nimport { getVisibleContact } from '../redux/contact/contact-selector';\n\nimport styles from './ContactList.module.css';\nimport { Button } from '@material-ui/core';\nimport { useEffect } from 'react';\n\n\nfunction ContactList() {\n  const contacts = useSelector(getVisibleContact);\n  const dispatch = useDispatch();\n\n  const onDeleteContact = id => dispatch(deleteContact(id));\n\n  // useEffect(() => {\n  //   dispatch(fetchContact());\n  //   // eslint-disable-next-line\n  // }, []);\n\n  useEffect(() => {\n    dispatch(fetchContact());\n  }, [dispatch]);\n\n  return (\n    <>\n      {!contacts.length && <div>Немає жодного контакту</div>}\n      <ul>\n        {contacts.map(({ id, name, number }) => (\n          <li key={id} className={styles.item__contact}>\n            <p className={styles.item__text}>{name}</p>\n            <p className={styles.item__text}>{number}</p>\n            <Button\n              className={styles.item__button}\n              onClick={() => onDeleteContact(id)}\n              color=\"secondary\"\n            >\n              Видалити\n            </Button>\n          </li>\n        ))}\n      </ul>\n    </>\n  );\n}\n\nContactList.propTypes = {\n  contacts: PropTypes.arrayOf(PropTypes.object),\n};\n  \nexport default ContactList;","import ContactForm from 'components/ContactForm/ContactForm';\nimport Filter from 'components/Filter/Filter';\nimport ContactList from 'components/ContactList/ContactList';\n\nimport styles from './App.css';\n\n\nfunction App() {\n  return (\n    <div style={{textAlign: \"center\"}}>\n      <h1 className={styles.bigText}>Phonebook</h1>\n      <ContactForm />\n      <h2 className={styles.text}>Contacts</h2>\n      <Filter />\n      <ContactList />\n    </div>\n  );\n}\n\nexport default App;","import { combineReducers } from \"redux\";\nimport actions from \"./contact-action\";\nimport { fetchContact, addContact, deleteContact } from './contact-operations';\nimport { createReducer } from \"@reduxjs/toolkit\";\n\n\nconst contact = createReducer([], {\n    [fetchContact.fulfilled]: (_, { payload }) => payload,\n    [addContact.fulfilled]: (state, { payload }) => [...state, payload],\n    [deleteContact.fulfilled]: (state, { payload }) =>\n        state.filter(contact => contact.id !== payload),\n});\n\nconst filter = createReducer('', {\n    [actions.changeFilter]: (_, { payload }) => payload,\n});\n\nconst error = createReducer(null, {\n    [fetchContact.rejected]: (_, { payload }) => payload,\n    [fetchContact.pending]: () => null,\n});\n\nconst isLoading = createReducer(false, {\n    [fetchContact.pending]: () => true,\n    [fetchContact.fulfilled]: () => false,\n    [fetchContact.rejected]: () => false,\n    [addContact.pending]: () => true,\n    [addContact.fulfilled]: () => false,\n    [addContact.rejected]: () => false,\n    [deleteContact.pending]: () => true,\n    [deleteContact.fulfilled]: () => false,\n    [deleteContact.rejected]: () => false,\n});\n\nexport default combineReducers({\n    contact,\n    isLoading,\n    filter,\n    error,\n});","import contactReducer from './contact/contact-reducer';\nimport {\n  configureStore,\n  getDefaultMiddleware,\n  combineReducers,\n} from '@reduxjs/toolkit';\n\nimport {\n  // persistStore,\n  persistReducer,\n  FLUSH,\n  REHYDRATE,\n  PAUSE,\n  PERSIST,\n  PURGE,\n  REGISTER,\n} from 'redux-persist';\n\nimport logger from 'redux-logger';\nimport storage from 'redux-persist/lib/storage';\n\n\nconst middleware = [\n    ...getDefaultMiddleware({\n        serializableCheck: {\n        ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\n        },\n    }),\n    logger,\n];\n\nconst persistConfig = {\n    key: 'root',\n    storage,\n    blacklist: ['filter'],\n};\n\nconst rootReducer = combineReducers({ contacts: contactReducer });\nconst persistedReducer = persistReducer(persistConfig, rootReducer);\n\nexport const store = configureStore({\n    reducer: persistedReducer,\n    devTools: process.env.NODE_ENV === 'development',\n    middleware,\n});","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport 'index.css';\nimport { Provider } from 'react-redux';\nimport { store } from 'components/redux/store'\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n        <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);"],"sourceRoot":""}