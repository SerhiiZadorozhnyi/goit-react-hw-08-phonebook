{"version":3,"sources":["components/redux/auth/auth-selectors.js","components/Navigation.js","components/redux/auth/auth-operations.js","components/UserMenu/UserMenu.js","components/AuthNav.js","components/AppBar.js","components/views/RegisterView.js","components/views/LoginView.js","components/redux/contact/contact-selector.js","components/redux/contact/contact-operations.js","components/ContactForm/ContactForm.js","components/ContactList/ContactList.js","components/redux/contact/contact-action.js","components/Filter/Filter.js","components/views/ContactView.js","components/PrivateRoute.js","components/PublicRoute.js","components/views/HomePage.js","components/ContactList/ContactEdit.js","App.js","components/redux/auth/auth-reducers.js","components/redux/contact/contact-reducer.js","components/redux/store.js","index.js","components/UserMenu/UseMenu.module.css","components/ContactForm/ContactForm.module.css","components/ContactList/ContactList.module.css"],"names":["getIsAuthenticated","state","auth","isAuthenticated","getUserName","user","name","Navigation","isLoading","useSelector","className","to","exact","axios","defaults","baseURL","token","headers","comon","Authorization","register","createAsyncThunk","credentials","a","rejectWithValue","post","response","data","logIn","logOut","_","getCurrentUser","thunkAPI","getState","persistedToken","get","UserMenu","dispatch","useDispatch","styles","container__menu","avatar__menu","name__menu","Button","variant","color","size","type","onClick","AuthNav","AppBar","RegisterWiew","useState","setName","email","setEmail","password","setPassword","handleChange","target","value","reset","Container","component","maxWidth","Avatar","Typography","onSubmit","event","preventDefault","noValidate","TextField","margin","required","fullWidth","label","autoComplete","autoFocus","onChange","LoginWiew","getContact","contacts","contact","getFilter","filter","getVisibleContact","normalizedFilter","toLowerCase","text","includes","getFiteredContact","fetchContact","addContact","number","deleteContact","contactId","delete","updateContact","patch","console","log","ContactForm","setNumber","find","alert","itemForm","placeholder","mask","maskChar","inputProps","button","disabled","startIcon","Save","ContactList","location","useLocation","length","List","map","id","ListItem","ListItemAvatar","ListItemText","primary","secondary","button__mardg","pathname","from","BorderColor","Delete","onDeleteContact","actions","changeFilter","createAction","Filter","ContactView","useEffect","PrivateRoute","redirectTo","children","routeProps","isLoggedIn","PublicRoute","restricted","HomePage","ContactEdit","useParams","history","useHistory","push","App","path","initialUserState","createReducer","fulfilled","payload","setError","error","rejected","combineReducers","pending","loading","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","logger","authPersistConfig","key","storage","whitelist","store","configureStore","reducer","persistReducer","authReducer","contactReducer","devTools","process","persistor","persistStore","ReactDOM","render","StrictMode","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.e19a1db6.chunk.js","sourcesContent":["export const getIsAuthenticated = state => state.auth.isAuthenticated;\nexport const getUserName = state => state.auth.user.name;","import React from 'react';\nimport { useSelector } from 'react-redux';\nimport { NavLink } from 'react-router-dom';\nimport { getIsAuthenticated } from './redux/auth/auth-selectors';\n\n\nfunction Navigation() {\n    const isLoading = useSelector(getIsAuthenticated);\n\n    return (\n        <nav>\n            <NavLink className=\"navLink\" to=\"/\" exact>\n                Home\n            </NavLink>\n            {isLoading && (\n                <NavLink className=\"navLink\" to=\"/contacts\" exact>\n                    Contacts\n                </NavLink>\n            )}\n        </nav>\n    );\n}\n\nexport default Navigation;","import { createAsyncThunk } from \"@reduxjs/toolkit\";\nimport axios from \"axios\";\n\n\naxios.defaults.baseURL = 'https://connections-api.herokuapp.com';\n\nconst token = {\n    set(token) {\n        axios.defaults.headers.comon.Authorization = `Bearer ${token}`;\n    },\n\n    unset() {\n        axios.defaults.headers.comon.Authorization = '';\n    },\n};\n\nexport const register = createAsyncThunk(\n    'auth/register',\n    async (credentials, { rejectWithValue }) => {\n        try {\n            const response = await axios.post('/users/signup', credentials);\n            token.set(response.data.token);\n            return response.data;\n        } catch (error) {\n            return rejectWithValue(error);\n        }\n    },\n);\n\nexport const logIn = createAsyncThunk(\n    'auth/login',\n    async (credentials, { rejectWithValue }) => {\n        try {\n            const response = await axios.post('/users/login', credentials);\n            token.set(response.data.token);\n            return response.data;\n        } catch (error) {\n            return rejectWithValue(error);        }\n    },\n);\n\nexport const logOut = createAsyncThunk(\n    'auth/logout',\n    async (_, { rejectWithValue }) => {\n        try {\n            await axios.post('/users/logout');\n            token.unset();\n        } catch (error) {\n            return rejectWithValue(error);\n        }\n    },\n);\n\nexport const getCurrentUser = createAsyncThunk(\n    'auth/getCurrentUser',\n    async (_, thunkAPI) => {\n        const state = thunkAPI.getState();\n        const persistedToken = state.auth.token;\n\n        if (persistedToken === null) {\n            return thunkAPI.rejectWithValue();\n        }\n\n        token.set(persistedToken);\n        try {\n            const { data } = await axios.get('/users/current');\n            return data;\n        } catch (error) {\n            return error.rejectWithValue();\n        }\n    },\n);","import React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { getUserName } from '../redux/auth/auth-selectors';\nimport { logOut } from '../redux/auth/auth-operations';\n\nimport styles from './UseMenu.module.css';\nimport { Button } from '@material-ui/core';\n\n\nfunction UserMenu() {\n    const name = useSelector(getUserName);\n    const dispatch = useDispatch();\n\n    const onLogOut = () => dispatch (logOut());\n\n    return (\n        <div className={styles.container__menu}>\n            <span className={styles.avatar__menu}> </span>\n            <span className={styles.name__menu}> {name}</span>\n            <Button\n                variant=\"contained\"\n                color=\"primary\"\n                size=\"small\"\n                type=\"submit\"\n                onClick={onLogOut}\n            >\n                Logout\n            </Button>\n        </div>\n    );\n}\n\nexport default UserMenu;","import React from 'react';\nimport { NavLink } from 'react-router-dom';\n\n\nconst AuthNav = () => (\n    <div>\n        <NavLink to=\"/register\" exact className=\"navLink\">\n            Sign Up\n        </NavLink>\n        <NavLink to=\"/login\" exact className=\"navLink\">\n            Sign In\n        </NavLink>\n    </div>\n);\n\nexport default AuthNav;","import React from 'react';\nimport Navigation from './Navigation';\nimport UserMenu from './UserMenu/UserMenu';\nimport AuthNav from './AuthNav';\nimport { getIsAuthenticated } from './redux/auth/auth-selectors';\nimport { useSelector } from 'react-redux';\n\nfunction AppBar() {\n    const isAuthenticated = useSelector(getIsAuthenticated);\n\n    return (\n        <>\n            <header className=\"heder__styles\">\n                <Navigation />\n                {isAuthenticated ? <UserMenu /> : <AuthNav />}\n            </header>\n        </>\n    );\n}\n\nexport default AppBar;","import React, { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { register } from 'components/redux/auth/auth-operations';\n\nimport './ViewPage.css';\nimport { Avatar } from '@material-ui/core';\nimport { Button } from '@material-ui/core';\nimport { TextField } from '@material-ui/core';\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\nimport { Typography } from '@material-ui/core';\nimport { Container } from '@material-ui/core';\n\n\nfunction RegisterWiew() {\n    const [name, setName] = useState('');\n    const [email, setEmail] = useState('');\n    const [password, setPassword] = useState('');\n    const dispatch = useDispatch();\n    \n    const handleChange = ({ target }) => {\n        const { name, value } = target;\n        switch (name) {\n            case 'name':\n                setName(value);\n                break;\n            case 'email':\n                setEmail(value);\n                break;\n            case 'password':\n                setPassword(value);\n                break;\n            default:\n                return;\n        }\n    };\n\n    const handleSubmit = event => {\n        event.preventDefault();\n        dispatch(register({ name, email, password }));\n        reset();\n    };\n\n    const reset = () => {\n        setName('');\n        setEmail('');\n        setPassword('');\n    };\n\n    return (\n        <Container component=\"main\" maxWidth=\"xs\">\n            <div className=\"container__login\">\n                <div className=\"avatar__class\">\n                    <Avatar>\n                        <LockOutlinedIcon />\n                    </Avatar>\n                </div>\n\n                <Typography component=\"h1\" variant=\"h5\">\n                    Sign In\n                </Typography>\n                <form onSubmit={handleSubmit} noValidate>\n                    <div className=\"input__reg\">\n                        <TextField\n                            type=\"text\"\n                            variant=\"outlined\"\n                            margin=\"normal\"\n                            required\n                            fullWidth\n                            label=\"Name\"\n                            name=\"name\"\n                            value={name}\n                            autoComplete=\"fname\"\n                            autoFocus\n                            onChange={handleChange}\n                        />\n                    </div>\n                    <div className=\"input__reg\">\n                        <TextField\n                            variant=\"outlined\"\n                            // margin=\"normal\"\n                            required\n                            fullWidth\n                            label=\"Email Address\"\n                            name=\"email\"\n                            value={email}\n                            autoComplete=\"email\"\n                            onChange={handleChange}\n                        />\n                    </div>\n                    <div className=\"input__reg\">\n                        <TextField\n                            variant=\"outlined\"\n                            required\n                            fullWidth\n                            label=\"Password\"\n                            name=\"password\"\n                            value={password}\n                            autoComplete=\"current-password\"\n                            onChange={handleChange}\n                        />\n                    </div>\n\n                    <Button type=\"submit\" fullWidth variant=\"contained\" color=\"primary\">\n                        Sign Up\n                    </Button>\n                </form>\n            </div>\n        </Container>\n    );\n}\n\nexport default RegisterWiew;","import React, { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { logIn } from 'components/redux/auth/auth-operations';\n\nimport './ViewPage.css';\nimport { Avatar } from '@material-ui/core';\nimport { Button } from '@material-ui/core';\nimport { TextField } from '@material-ui/core';\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\nimport { Typography } from '@material-ui/core';\nimport { Container } from '@material-ui/core';\n\n\nfunction LoginWiew() {\n    const [email, setEmail] = useState('');\n    const [password, setPassword] = useState('');\n    const dispatch = useDispatch();\n\n    const handleChange = ({ target }) => {\n        const { name, value } = target;\n        switch (name) {\n            case 'email':\n                setEmail(value);\n                break;\n            case 'password':\n                setPassword(value);\n                break;\n            default:\n                return;\n        }\n    };\n\n    const handleSubmit = event => {\n        event.preventDefault();\n        dispatch(logIn({ email, password }));\n        reset();\n    };\n\n    const reset = () => {\n        setEmail('');\n        setPassword('');\n    };\n\n    return (\n        <Container component=\"main\" maxWidth=\"xs\">\n            <div className=\"container__login\">\n                <div className=\"avatar__class\">\n                    <Avatar>\n                        <LockOutlinedIcon />\n                    </Avatar>\n                </div>\n\n                <Typography component=\"h1\" variant=\"h5\">\n                    Sign In\n                </Typography>\n                <form onSubmit={handleSubmit} noValidate>\n                    <TextField\n                        variant=\"outlined\"\n                        margin=\"normal\"\n                        required\n                        fullWidth\n                        label=\"email\"\n                        name=\"email\"\n                        value={email}\n                        autoComplete=\"email\"\n                        autoFocus\n                        onChange={handleChange}\n                    />\n                    <TextField\n                        variant=\"outlined\"\n                        margin=\"normal\"\n                        required\n                        fullWidth\n                        label=\"password\"\n                        name=\"password\"\n                        value={password}\n                        autoComplete=\"current-password\"\n                        // autoFocus\n                        onChange={handleChange}\n                    />\n\n                    <Button type=\"submit\" fullWidth variant=\"contained\" color=\"primary\">\n                        Sign In\n                    </Button>\n                </form>\n            </div>\n        </Container>\n    );\n}\n\nexport default LoginWiew;","export const getContact = state => state.contacts.contact;\nexport const getFilter = state => state.contacts.filter;\nexport const getLoading = state => state.contact.loading;\n\nexport const getVisibleContact = state => {\n    const contacts = getContact(state);\n    const filter = getFilter(state);\n\n    const getFiteredContact = contacts => {\n        const normalizedFilter = filter.toLowerCase();\n        return contacts.filter(text =>\n            text.name.toLowerCase().includes(normalizedFilter),\n        );\n    };\n\n    return getFiteredContact(contacts);\n};","import axios from \"axios\";\nimport { createAsyncThunk } from '@reduxjs/toolkit';\n\n\nexport const fetchContact = createAsyncThunk(\n    'contact/fetchContact',\n    async (_, { rejectWithValue }) => {\n        try {\n            const { data } = await axios.get(`/contacts`);\n            return data;\n        } catch (error) {\n            return rejectWithValue(error);\n        }\n    },\n);\n\nexport const addContact = createAsyncThunk(\n    'contact/addContact',\n    async ({ name , number } , { rejectWithValue }) => {\n        const contact = { name, number };\n        try {\n            const { data } = await axios.post(`/contacts`, contact);\n            return data;\n        } catch (error) {\n            return rejectWithValue(error);\n        }\n    },\n);\n        \nexport const deleteContact = createAsyncThunk(\n    'contact/deleteContact',\n    async (contactId, { rejectWithValue }) => {\n        try {\n            await axios.delete(`/contacts/${contactId}`);\n            return contactId;\n        } catch (error) {\n            return rejectWithValue(error);\n        }\n    },\n);\n\nexport const updateContact = createAsyncThunk(\n    'contact/updateContact',\n    async ({ contactId, name, number }, { rejectWithValue }) => {\n        const contact = { name, number };\n        try {\n            const { data } = await axios.patch(`/contacts/${contactId}`, contact);\n            console.log(data);\n            return data;\n        } catch (error) {\n            return rejectWithValue(error);\n        }\n    },\n);","import { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { getContact } from '../redux/contact/contact-selector';\nimport { addContact } from '../redux/contact/contact-operations';\n\nimport styles from './ContactForm.module.css';\nimport { SaveIcon } from '@material-ui/icons/Save';\nimport { Button } from '@material-ui/core';\nimport { TextField } from '@material-ui/core';\nimport { InputMask } from 'react-input-mask';\n\n\n\nfunction ContactForm() {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n  const contacts = useSelector(getContact);\n  const dispatch = useDispatch();\n\n  const handleChange = ({ target }) => {\n    const { name, value } = target;\n    switch (name) {\n      case 'name':\n        setName(value);\n        break;\n      case 'number':\n        setNumber(value);\n        break;\n      default:\n        return;\n    }\n  };\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    \n    const auditContact = contacts.find(\n      contact => contact.name.toLowerCase() === name.toLowerCase(),\n    );\n    if (auditContact) {\n      alert(`Контакт ${name} з таким іменем вже існує.`);\n      reset();\n      return;\n    }\n    dispatch(addContact({ name, number }));\n    reset();\n  };\n\n  const reset = () => {\n    setName('');\n    setNumber('');\n  };\n\n\n  return (\n    <form onSubmit={handleSubmit} className={styles.itemForm} autoComplete=\"off\" noValidate>\n      <div className=\"styles.item__input\">\n        <TextField\n          size=\"small\"\n          label=\"Name\"\n          variant=\"outlined\"\n          type=\"text\"\n          name=\"name\"\n          placeholder=\"Jack Sparrow\"\n          value={name}\n          onChange={handleChange}\n        />\n      </div>\n      <div className=\"styles.item__input\">\n        <InputMask\n          mask=\"(999)999-99-99\"\n          maskChar={null}\n          size=\"small\"\n          label=\"Phone\"\n          variant=\"outlined\"\n          type=\"text\"\n          name=\"Number\"\n          value={number}\n          onChange={handleChange}\n        >\n          {inputProps => (\n            <TextField\n              {...inputProps}\n              type=\"number\"\n              variant=\"outlined\"\n            />\n          )}\n        </InputMask>\n      </div>\n\n      <div className=\"item__input\">\n        <Button \n          variant=\"contained\"\n          type=\"submit\" color=\"primary\"\n          className={styles.button}\n          disabled={name === '' || number === ''}\n          startIcon={<SaveIcon />}  \n        >\n          Додати контакт\n        </Button>\n      </div>\n    </form>\n  );\n}\n  \nexport default ContactForm;","import PropTypes from 'prop-types';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { deleteContact} from '../redux/contact/contact-operations';\nimport { getVisibleContact } from '../redux/contact/contact-selector';\n\nimport styles from './ContactList.module.css';\nimport { DeleteIcon } from '@material-ui/icons/Delete';\nimport { Button } from '@material-ui/core';\nimport { BorderColorIcon } from '@material-ui/icons/BorderColor';\nimport { List } from '@material-ui/core';\nimport { ListItem } from '@material-ui/core';\nimport { ListItemText } from '@material-ui/core';\nimport { ListItemAvatar } from '@material-ui/core';\nimport { Avatar } from '@material-ui/core';\nimport { Link, useLocation } from 'react-router-dom';\n\n\nfunction ContactList() {\n  const contacts = useSelector(getVisibleContact);\n  const dispatch = useDispatch();\n  const location = useLocation();\n\n  const onDeleteContact = id => dispatch(deleteContact(id));\n\n  return (\n    <>\n      {contacts.length && <div>Немає жодного контакту.</div>}\n\n      <List>\n        {contacts.map(({ id, name, number }) => (\n          <ListItem key={id}>\n            <ListItemAvatar>\n              <Avatar></Avatar>\n            </ListItemAvatar>\n            <ListItemText primary={name} secondary={number} />\n            <Link\n              className={styles.button__mardg}\n              to={{\n                pathname: `/contacts/${id}`,\n                state: { from: location },\n                name: name,\n                number: number,\n              }}\n            >\n              <Button\n                variant=\"contained\"\n                color=\"primary\"\n                size=\"small\"\n                startIcon={<BorderColorIcon />}\n              >\n                Редагувати\n              </Button>\n            </Link>\n\n            <Button\n              variant=\"contained\"\n              color=\"primary\"\n              size=\"small\"\n              startIcon={<DeleteIcon />}\n              onClick={() => onDeleteContact(id)}\n            >\n              Видалити\n            </Button>\n          </ListItem>\n        ))}\n      </List>\n    </>\n  );\n}\n\nContactList.propTypes = {\n  contacts: PropTypes.arrayOf(PropTypes.object),\n};\n  \nexport default ContactList;","import { createAction } from '@reduxjs/toolkit';\n\nconst changeFilter = createAction('contact/changeFilter');\n\nconst actions = { changeFilter };\n\nexport default actions;","import { useDispatch, useSelector } from \"react-redux\";\nimport actions from \"components/redux/contact/contact-action\";\nimport { getFilter } from '../redux/contact/contact-selector';\n\n// import styles from './Filter.module.css';\n// import { Input } from '@material-ui/core';\nimport { TextField } from \"@material-ui/core\";\n\n\nfunction Filter() {\n  const value = useSelector(getFilter);\n  const dispatch = useDispatch();\n\n  return (\n    <TextField\n      size=\"small\"\n      label=\"Search\"\n      variant=\"outlined\"\n      type=\"text\"\n      value={value}\n      onChange={event => dispatch(actions.changeFilter(event.target.value))}\n    />\n\n    // <label className={styles.itemFilter}>\n    //   <p className={styles.itemTextFilter}>Пошук контактів</p>\n    //   <Input\n    //     className={styles.itemElement}\n    //     type=\"text\"\n    //     value={value}\n    //     onChange={event => dispatch(actions.changeFilter(event.target.value))}\n    //   />\n    // </label>\n  );\n}\n\nexport default Filter;","import { useEffect } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport ContactForm from \"components/ContactForm/ContactForm\";\nimport ContactList from \"components/ContactList/ContactList\";\nimport Filter from \"components/Filter/Filter\";\nimport { fetchContact } from \"components/redux/contact/contact-operations\";\n\n\nfunction ContactView() {\n    const dispatch = useDispatch();\n    // eslint-disable-next-line\n    useEffect(() => dispatch(fetchContact()), []);\n    \n    return(\n        <>\n            <ContactForm />\n            <Filter />\n            <ContactList />\n        </>\n    );\n}\n\nexport default ContactView;","import { Route, Redirect } from 'react-router-dom';\nimport { useSelector } from 'react-redux';\nimport { getIsAuthenticated } from './redux/auth/auth-selectors';\n\nfunction PrivateRoute({ redirectTo, children, ...routeProps }) {\n    const isLoggedIn = useSelector(getIsAuthenticated);\n\n    return (\n        <Route {...routeProps}>\n            {isLoggedIn ? children : <Redirect to={redirectTo} />}\n        </Route>\n    );\n}\n\nexport default PrivateRoute;\n","import React from 'react';\nimport { Route, Redirect } from 'react-router-dom';\nimport { useSelector } from 'react-redux';\nimport { getIsAuthenticated } from './redux/auth/auth-selectors';\n\n\nfunction PublicRoute({ redirectTo, children, ...routeProps }) {\n    const isLoggedIn = useSelector(getIsAuthenticated);\n\n    return (\n        <Route {...routeProps}>\n            {isLoggedIn && routeProps.restricted ? (\n                <Redirect to={redirectTo} />\n            ) : (\n                children\n            )}\n        </Route>\n    );\n}\n\nexport default PublicRoute;","import React from \"react\";\n\nconst HomePage = () => (\n    <div className=\"container__home\">\n        <h1 className=\"title__home\">Вітаю</h1>\n    </div>\n);\n\nexport default HomePage;","import { useHistory, useLocation, useParams } from \"react-router-dom\";\nimport { useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { updateContact } from \"components/redux/contact/contact-operations\";\n\nimport { Button } from \"@material-ui/core\";\nimport { TextField } from \"@material-ui/core\";\nimport { InputMask } from \"react-input-mask\";\n\n\nfunction ContactEdit() {\n    const { contactId } = useParams();\n    const location = useLocation();\n    const [name, setName] = useState(location.name);\n    const [number, setNumber] = useState(location.number);\n    const history = useHistory();\n    const dispatch = useDispatch();\n\n    const handleChange = ({ target }) => {\n        const { name, value } = target;\n        switch (name) {\n            case 'name':\n                setName(value);\n                break;\n            case 'number':\n                setNumber(value);\n                break;\n            default:\n                return;\n        }\n    };\n\n    const handleSubmit = event => {\n        event.preventDefault();\n\n        dispatch(updateContact({ contactId, name, number }));\n        history.push(location?.state?.from ?? '/');\n        return;\n    };\n\n    return (\n        <>\n            <form\n                noValidate\n                autoComplete=\"off\"\n                onSubmit={handleSubmit}\n                className=\"item__form-edit\"\n            >\n                <div className=\"item__input-edit\">\n                    <TextField\n                        size=\"small\"\n                        label=\"Name\"\n                        variant=\"outlined\"\n                        type=\"text\"\n                        name=\"name\"\n                        placeholder=\"Jack Sparrow\"\n                        value={name}\n                        onChange={handleChange}\n                    />\n                </div>\n                <div className=\"item__input-edit\">\n                    <InputMask\n                        mask=\"(999)999-99-99\"\n                        maskChar={null}\n                        size=\"small\"\n                        label=\"Phone\"\n                        variant=\"outlined\"\n                        type=\"text\"\n                        name=\"number\"\n                        value={number}\n                        onChange={handleChange}\n                    >\n                        {inputProps => (\n                            <TextField\n                                {...inputProps}\n                                type=\"number\"\n                                variant=\"outlined\"\n                            />\n                        )}\n                    </InputMask>\n                </div>\n\n                <div className=\"item__input\">\n                            <Button\n                                variant=\"contained\"\n                                color=\"primary\"\n                                type=\"submit\"\n                                disabled={name === '' || number === ''}\n                            >\n                                Оновити контакт\n                            </Button>\n                </div>\n            </form>\n        </>\n    );\n}\n\nexport default ContactEdit;","import { Switch } from 'react-router-dom';\nimport AppBar from 'components/AppBar';\nimport RegisterWiew from 'components/views/RegisterView';\nimport LoginWiew from 'components/views/LoginView';\nimport ContactView from 'components/views/ContactView';\nimport PrivateRoute from 'components/PrivateRoute';\nimport PublicRoute from 'components/PublicRoute';\nimport HomePage from 'components/views/HomePage';\nimport ContactEdit from 'components/ContactList/ContactEdit';\nimport { useEffect } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { getCurrentUser } from 'components/redux/auth/auth-operations';\n\nimport './App.css';\n\n\nfunction App() {\n  const dispatch = useDispatch();\n\n  useEffect(() => dispatch(getCurrentUser()), [dispatch]);\n\n  return (\n    <div className=\"Container\">\n      <AppBar />\n\n      <Switch>\n        <PublicRoute exact path=\"/\">\n          <HomePage />\n        </PublicRoute>\n\n        <PublicRoute path=\"/register\" redirectTo=\"/contacts\" restricted>\n          <RegisterWiew />\n        </PublicRoute>\n\n        <PublicRoute path=\"/login\" redirectTo=\"/contacts\" restricted>\n          <LoginWiew />\n        </PublicRoute>\n\n        <PrivateRoute exact path=\"/contacts\" redirectTo=\"/login\">\n          <ContactView />\n        </PrivateRoute>\n\n        <PrivateRoute path=\"/contacts/:contactId\" redirectTo=\"/login\">\n          <ContactEdit />\n        </PrivateRoute>\n      </Switch>\n    </div>\n  );\n}\n\nexport default App;","import { combineReducers, createReducer } from '@reduxjs/toolkit';\nimport { register, logIn, logOut, getCurrentUser } from './auth-operations';\n\n\nconst initialUserState = { name: null, email: null };\n\nconst user = createReducer(initialUserState, {\n    [register.fulfilled]: (_, { payload }) => payload.user,\n    [logIn.fulfilled]: (_, { payload }) => payload.user,\n    [logOut.fulfilled]: () => initialUserState,\n    [getCurrentUser.fulfilled]: (_, { payload }) => payload,\n});\n\nconst token = createReducer (null, {\n    [register.fulfilled]: (_, { payload }) => payload.token,\n    [logIn.fulfilled]: (_, { payload }) => payload.token,\n    [logOut.fulfilled]: () => null,\n});\n\nconst setError = (_, { payload }) => payload;\n\nconst error = createReducer(null, {\n    [register.rejected]: setError,\n    [logIn.rejected]: setError,\n    [logOut.rejected]: setError,\n    [getCurrentUser.rejected]: setError,\n});\n\nconst isAuthenticated = createReducer(false, {\n    [register.fulfilled]: () => true,\n    [register.rejected]: () => false,\n    [logIn.fulfilled]: () => true,\n    [logIn.rejected]: () => false,\n    [logOut.fulfilled]: () => false,\n    [getCurrentUser.fulfilled]: () => true,\n    [getCurrentUser.rejected]: () => false,\n});\n\nexport default combineReducers({\n    user,\n    token,\n    error,\n    isAuthenticated,\n});\n\n\n","import { combineReducers } from \"redux\";\nimport actions from \"./contact-action\";\nimport { fetchContact, addContact, deleteContact, updateContact } from './contact-operations';\nimport { createReducer } from \"@reduxjs/toolkit\";\n\n\nconst contact = createReducer([], {\n    [fetchContact.fulfilled]: (_, { payload }) => payload,\n    [addContact.fulfilled]: (state, { payload }) => [...state, payload],\n    [deleteContact.fulfilled]: (state, { payload }) =>\n        state.filter(contact => contact.id !== payload),\n\n    [updateContact.fulfilled]: (state, { payload }) => \n        state.map(contact => (contact.id === payload.id ? payload : contact)),\n});\n\nconst filter = createReducer('', {\n    [actions.changeFilter]: (_, { payload }) => payload,\n});\n\nconst error = createReducer(null, {\n    [fetchContact.rejected]: (_, { payload }) => payload,\n    [fetchContact.pending]: () => null,\n});\n\nconst loading = createReducer(false, {\n    [fetchContact.pending]: () => true,\n    [fetchContact.fulfilled]: () => false,\n    [fetchContact.rejected]: () => false,\n    [addContact.pending]: () => true,\n    [addContact.fulfilled]: () => false,\n    [addContact.rejected]: () => false,\n    [deleteContact.pending]: () => true,\n    [deleteContact.fulfilled]: () => false,\n    [deleteContact.rejected]: () => false,\n    [updateContact.pending]: () => true,\n    [updateContact.fulfilled]: () => false,\n    [updateContact.rejected]: () => false,\n});\n\nexport default combineReducers({\n    contact,\n    loading,\n    filter,\n    error,\n});","import authReducer from './auth/auth-reducers';\nimport contactReducer from './contact/contact-reducer';\nimport { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit';\n\nimport {\n  persistStore,\n  persistReducer,\n  FLUSH,\n  REHYDRATE,\n  PAUSE,\n  PERSIST,\n  PURGE,\n  REGISTER,\n} from 'redux-persist';\nimport logger from 'redux-logger';\nimport storage from 'redux-persist/lib/storage';\n\n\nconst middleware = [\n    ...getDefaultMiddleware({\n        serializableCheck: {\n        ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\n        },\n    }),\n    logger,\n];\n\nconst authPersistConfig = {\n    key: 'auth',\n    storage,\n    whitelist: ['token'],\n};\n\nexport const store = configureStore({\n    reducer: {\n      auth: persistReducer(authPersistConfig, authReducer),\n      contacts: contactReducer,\n    },\n    devTools: process.env.NODE_ENV === 'development',\n    middleware,\n});\n\nexport const persistor = persistStore(store);","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport App from './App';\nimport 'index.css';\nimport { Provider } from 'react-redux';\nimport { store, persistor } from 'components/redux/store';\nimport { PersistGate } from 'redux-persist/integration/react';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <PersistGate loading={null} persistor={persistor}>\n        <BrowserRouter>\n          <App />\n        </BrowserRouter>\n      </PersistGate>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container__menu\":\"UseMenu_container__menu__37har\",\"avatar__menu\":\"UseMenu_avatar__menu__ohW_a\",\"name__menu\":\"UseMenu_name__menu__1i1O6\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item__form\":\"ContactForm_item__form__8nPCm\",\"item__input\":\"ContactForm_item__input__3rUS5\",\"label\":\"ContactForm_label__378f8\",\"input\":\"ContactForm_input__gm87B\",\"itemForm\":\"ContactForm_itemForm__E58BF\",\"itemInput\":\"ContactForm_itemInput__2wqEf\",\"itemBlock\":\"ContactForm_itemBlock__ozs_K\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item__contact\":\"ContactList_item__contact__2MFwC\",\"item__form-edit\":\"ContactList_item__form-edit__1Iqf5\",\"item__input-edit\":\"ContactList_item__input-edit__1VxjO\",\"button__mardg\":\"ContactList_button__mardg__2Wp9N\"};"],"sourceRoot":""}