{"version":3,"sources":["components/ContactForm/ContactForm.module.css","components/ContactList/ContactList.module.css","components/Filter/Filter.module.css","components/redux/contact/contact-selector.js","components/redux/contact/contact-action.js","components/redux/contact/contact-operations.js","components/ContactForm/ContactForm.js","components/Filter/Filter.js","components/ContactList/ContactList.js","App.js","components/redux/contact/contact-reducer.js","components/redux/store.js","index.js"],"names":["module","exports","getContact","state","contacts","contact","getFilter","filter","getVisibleContact","normalizedFilter","toLowerCase","text","name","includes","getFiteredContact","changeFilter","createAction","actions","fetchContactRequest","fetchContactSuccess","fetchContactError","addContactRequest","addContactSuccess","addContactError","deleteContactRequest","deleteContactSuccess","deleteContactError","axios","defaults","baseURL","fetchContact","createAsyncThunk","_","a","rejectWithValue","get","data","addContact","number","dispatch","post","deleteContact","contactId","delete","ContactForm","useState","setName","setNumber","useSelector","useDispatch","handleChange","target","value","reset","onSubmit","event","preventDefault","find","alert","className","styles","itemForm","itemBlock","label","Input","type","placeholder","onChange","itemInput","Button","color","button","disabled","Filter","itemFilter","itemTextFilter","itemElement","ContactList","useEffect","length","map","id","item__contact","item__text","item__button","onClick","onDeleteContact","App","style","textAlign","bigText","createReducer","fulfilled","payload","error","rejected","pending","isLoading","combineReducers","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","logger","persistConfig","key","storage","blacklist","rootReducer","contactReducer","persistedReducer","persistReducer","store","configureStore","reducer","devTools","process","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.eb4fe8e4.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"ContactForm_label__2vrXc\",\"input\":\"ContactForm_input__rVDjM\",\"itemForm\":\"ContactForm_itemForm__34YK1\",\"itemInput\":\"ContactForm_itemInput__3H00A\",\"itemBlock\":\"ContactForm_itemBlock__FTduh\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item__contact\":\"ContactList_item__contact__2gNjK\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"itemFilter\":\"Filter_itemFilter__3-WTU\",\"itemElement\":\"Filter_itemElement__2cUWV\",\"itemTextFilter\":\"Filter_itemTextFilter__1UoVK\"};","export const getContact = state => state.contacts.contact;\r\nexport const getFilter = state => state.contacts.filter;\r\n\r\nexport const getVisibleContact = state => {\r\n    const contacts = getContact(state);\r\n    const filter = getFilter(state);\r\n\r\n    const getFiteredContact = contacts => {\r\n    const normalizedFilter = filter.toLowerCase();\r\n    return contacts.filter(text =>\r\n        text.name.toLowerCase().includes(normalizedFilter),\r\n    );\r\n    };\r\n\r\n    return getFiteredContact(contacts);\r\n};","import { createAction } from '@reduxjs/toolkit';\r\n\r\nconst changeFilter = createAction('contact/changeFilter');\r\n\r\n// const actions = { changeFilter };\r\n\r\n\r\n\r\n// fetchContact.pending\r\nconst fetchContactRequest = createAction('contact/fetchContactRequest');\r\n// fetchContact.fulfilled\r\nconst fetchContactSuccess = createAction('contact/fetchContactSuccess');\r\n// fetchContact.rejected\r\nconst fetchContactError = createAction('contact/fetchContactError');\r\n\r\nconst addContactRequest = createAction('contact/addContactRequest');\r\nconst addContactSuccess = createAction('contact/addContactSuccess');\r\nconst addContactError = createAction('contact/addContactError');\r\n\r\nconst deleteContactRequest = createAction('contacn/deleteContactRequest');\r\nconst deleteContactSuccess = createAction('contact/deleteContactSuccess');\r\nconst deleteContactError = createAction('contact/deleteContactError');\r\n\r\n\r\nconst actions = {\r\n    fetchContactRequest,\r\n    fetchContactSuccess,\r\n    fetchContactError,\r\n    addContactRequest,\r\n    addContactSuccess,\r\n    addContactError,\r\n    deleteContactRequest,\r\n    deleteContactSuccess,\r\n    deleteContactError,\r\n  \r\n    changeFilter,\r\n  };\r\n\r\nexport default actions;","import axios from \"axios\";\r\nimport { createAsyncThunk } from '@reduxjs/toolkit';\r\nimport actions from './contact-action';\r\n\r\naxios.defaults.baseURL = 'http://localhost:4040';\r\n\r\n\r\n\r\nexport const fetchContact = createAsyncThunk(\r\n    'contact/fetchContact',\r\n    async (_, { rejectWithValue }) => {\r\n        try {\r\n            const { data } = await axios.get(`/contact`);\r\n            return data;\r\n        } catch (error) {\r\n            return rejectWithValue(error);\r\n        }\r\n    },\r\n);\r\n\r\n// export const addContact = createAsyncThunk(\r\n//     'contact/addContact',\r\n//     async (data, { rejectWithValue }) => {\r\n//     const contact = { name: data, number: data };\r\n//     try {\r\n//         const { data } = await axios.post(`/contact`, contact);\r\n//         return data;\r\n//     } catch (error) {\r\n//         return rejectWithValue(error);\r\n//       }\r\n//     },\r\n// );\r\n\r\nexport const addContact = (name, number) => async dispatch => {\r\n  const contact = { name, number };\r\n  dispatch(actions.addContactRequest());\r\n  try {\r\n    const { data } = await axios.post(`/contact`, contact);\r\n    dispatch(actions.addContactSuccess(data));\r\n  } catch (error) {\r\n    dispatch(actions.addContactError(error));\r\n  }\r\n};\r\n\r\n        \r\nexport const deleteContact = createAsyncThunk(\r\n    'contact/deleteContact',\r\n    async (contactId, { rejectWithValue }) => {\r\n        try {\r\n            await axios.delete(`/contact/${contactId}`);\r\n            return contactId;\r\n        } catch (error) {\r\n            return rejectWithValue(error);\r\n        }\r\n    },\r\n);\r\n\r\n\r\n// export const fetchContact = () => async (dispatch) => {\r\n//   dispatch(actions.fetchContactRequest());\r\n//   try {\r\n//     const { data } = await axios.get(`/contact`);\r\n//     dispatch(actions.fetchContactSuccess(data));\r\n//   } catch (error) {\r\n//     dispatch(actions.fetchContactError(error));\r\n//   }\r\n// };\r\n\r\n\r\n// export const deleteContact = contactId => async dispatch => {\r\n//   dispatch(actions.deleteContactRequest());\r\n//   try {\r\n//     await axios.delete(`/contact/${contactId}`);\r\n//     dispatch(actions.deleteContactSuccess(contactId));\r\n//   } catch (error) {\r\n//     dispatch(actions.deleteContactError(error));\r\n//   }\r\n// };","import { useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { getContact } from '../redux/contact/contact-selector';\r\nimport { addContact } from '../redux/contact/contact-operations';\r\n\r\nimport styles from './ContactForm.module.css';\r\nimport { Input } from '@material-ui/core';\r\nimport { Button } from '@material-ui/core';\r\n\r\n\r\nfunction ContactForm() {\r\n  const [name, setName] = useState('');\r\n  const [number, setNumber] = useState('');\r\n  const contacts = useSelector(getContact);\r\n  const dispatch = useDispatch();\r\n\r\n  const handleChange = ({ target }) => {\r\n    const { name, value } = target;\r\n    switch (name) {\r\n      case 'name':\r\n        setName(value);\r\n        break;\r\n      case 'number':\r\n        setNumber(value);\r\n        break;\r\n      default:\r\n        return;\r\n    }\r\n  };\r\n\r\n  const handleSubmit = event => {\r\n    event.preventDefault();\r\n    \r\n    const auditContact = contacts.find(\r\n      contact => contact.name.toLowerCase() === name.toLowerCase(),\r\n    );\r\n    if (auditContact) {\r\n      alert(`Контакт ${name} з таким іменем вже існує.`);\r\n      reset();\r\n      return;\r\n    }\r\n    dispatch(addContact(name, number));\r\n    reset();\r\n  };\r\n\r\n  const reset = () => {\r\n    setName('');\r\n    setNumber('');\r\n  };\r\n\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit} className={styles.itemForm}>\r\n      <div className={styles.itemBlock}>\r\n        <label className={styles.label}>\r\n          Ім'я:\r\n            <Input\r\n              type=\"text\"\r\n              name=\"name\"\r\n              value={name}\r\n              placeholder=\"Jack Sparrow\"\r\n              onChange={handleChange}\r\n              className={styles.itemInput}\r\n            />\r\n        </label>\r\n\r\n        <label className={styles.label}>\r\n          Номер:\r\n            <Input\r\n              type=\"text\"\r\n              name=\"number\"\r\n              value={number}\r\n              placeholder=\"111-11-11\"\r\n              onChange={handleChange}\r\n              className={styles.itemInput}\r\n            />\r\n        </label>\r\n      </div>\r\n\r\n      <Button type=\"submit\" color=\"primary\" className={styles.button} disabled={name === '' || number === ''}>\r\n        Додати контакт\r\n      </Button>\r\n    </form>\r\n  );\r\n}\r\n  \r\nexport default ContactForm;","import { useDispatch, useSelector } from \"react-redux\";\r\n// import actions from \"components/redux/contact/contact-operations\";\r\nimport actions from '../redux/contact/contact-action';\r\n// import { getFilter } from \"components/redux/contact/contact-selector\";\r\nimport { getFilter } from '../redux/contact/contact-selector';\r\n\r\nimport styles from './Filter.module.css';\r\nimport { Input } from '@material-ui/core';\r\n\r\n\r\nfunction Filter() {\r\n  const value = useSelector(getFilter);\r\n  const dispatch = useDispatch();\r\n\r\n  return (\r\n    <label className={styles.itemFilter}>\r\n      <p className={styles.itemTextFilter}>Пошук контактів</p>\r\n      <Input\r\n        className={styles.itemElement}\r\n        type=\"text\"\r\n        value={value}\r\n        onChange={event => dispatch(actions.changeFilter(event.target.value))}\r\n      />\r\n    </label>\r\n  );\r\n}\r\n\r\nexport default Filter;","import PropTypes from 'prop-types';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport {\r\n  fetchContact,\r\n  deleteContact,\r\n} from '../redux/contact/contact-operations';\r\n\r\n\r\n\r\nimport { getVisibleContact } from '../redux/contact/contact-selector';\r\n\r\nimport styles from './ContactList.module.css';\r\nimport { Button } from '@material-ui/core';\r\nimport { useEffect } from 'react';\r\n\r\n\r\nfunction ContactList() {\r\n  const contacts = useSelector(getVisibleContact);\r\n  const dispatch = useDispatch();\r\n\r\n  const onDeleteContact = id => dispatch(deleteContact(id));\r\n\r\n  // useEffect(() => {\r\n  //   dispatch(fetchContact());\r\n  //   // eslint-disable-next-line\r\n  // }, []);\r\n\r\n  useEffect(() => {\r\n    dispatch(fetchContact());\r\n  }, [dispatch]);\r\n\r\n  return (\r\n    <>\r\n      {!contacts.length && <div>Немає жодного контакту</div>}\r\n      <ul>\r\n        {contacts.map(({ id, name, number }) => (\r\n          <li key={id} className={styles.item__contact}>\r\n            <p className={styles.item__text}>{name}</p>\r\n            <p className={styles.item__text}>{number}</p>\r\n            <Button\r\n              className={styles.item__button}\r\n              onClick={() => onDeleteContact(id)}\r\n              color=\"secondary\"\r\n            >\r\n              Видалити\r\n            </Button>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </>\r\n  );\r\n}\r\n\r\nContactList.propTypes = {\r\n  contacts: PropTypes.arrayOf(PropTypes.object),\r\n};\r\n  \r\nexport default ContactList;","import ContactForm from 'components/ContactForm/ContactForm';\r\nimport Filter from 'components/Filter/Filter';\r\nimport ContactList from 'components/ContactList/ContactList';\r\n\r\nimport styles from './App.css';\r\n\r\n\r\nfunction App() {\r\n  return (\r\n    <div style={{textAlign: \"center\"}}>\r\n      <h1 className={styles.bigText}>Phonebook</h1>\r\n      <ContactForm />\r\n      <h2 className={styles.text}>Contacts</h2>\r\n      <Filter />\r\n      <ContactList />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;","import { combineReducers } from \"redux\";\r\nimport actions from \"./contact-action\";\r\nimport { fetchContact, addContact, deleteContact } from './contact-operations';\r\nimport { createReducer } from \"@reduxjs/toolkit\";\r\n\r\n\r\nconst contact = createReducer([], {\r\n    [fetchContact.fulfilled]: (_, { payload }) => payload,\r\n    [addContact.fulfilled]: (state, { payload }) => [...state, payload],\r\n    [deleteContact.fulfilled]: (state, { payload }) =>\r\n        state.filter(contact => contact.id !== payload),\r\n});\r\n\r\nconst filter = createReducer('', {\r\n    [actions.changeFilter]: (_, { payload }) => payload,\r\n});\r\n\r\nconst error = createReducer(null, {\r\n    [fetchContact.rejected]: (_, { payload }) => payload,\r\n    [fetchContact.pending]: () => null,\r\n});\r\n\r\nconst isLoading = createReducer(false, {\r\n    [fetchContact.pending]: () => true,\r\n    [fetchContact.fulfilled]: () => false,\r\n    [fetchContact.rejected]: () => false,\r\n    [addContact.pending]: () => true,\r\n    [addContact.fulfilled]: () => false,\r\n    [addContact.rejected]: () => false,\r\n    [deleteContact.pending]: () => true,\r\n    [deleteContact.fulfilled]: () => false,\r\n    [deleteContact.rejected]: () => false,\r\n});\r\n\r\nexport default combineReducers({\r\n    contact,\r\n    isLoading,\r\n    filter,\r\n    error,\r\n});","import contactReducer from './contact/contact-reducer';\r\nimport {\r\n  configureStore,\r\n  getDefaultMiddleware,\r\n  combineReducers,\r\n} from '@reduxjs/toolkit';\r\n\r\nimport {\r\n  // persistStore,\r\n  persistReducer,\r\n  FLUSH,\r\n  REHYDRATE,\r\n  PAUSE,\r\n  PERSIST,\r\n  PURGE,\r\n  REGISTER,\r\n} from 'redux-persist';\r\n\r\nimport logger from 'redux-logger';\r\nimport storage from 'redux-persist/lib/storage';\r\n\r\n\r\nconst middleware = [\r\n    ...getDefaultMiddleware({\r\n        serializableCheck: {\r\n        ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\r\n        },\r\n    }),\r\n    logger,\r\n];\r\n\r\nconst persistConfig = {\r\n    key: 'root',\r\n    storage,\r\n    blacklist: ['filter'],\r\n};\r\n\r\nconst rootReducer = combineReducers({ contacts: contactReducer });\r\nconst persistedReducer = persistReducer(persistConfig, rootReducer);\r\n\r\nexport const store = configureStore({\r\n    reducer: persistedReducer,\r\n    devTools: process.env.NODE_ENV === 'development',\r\n    middleware,\r\n});","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport 'index.css';\r\nimport { Provider } from 'react-redux';\r\nimport { store } from 'components/redux/store'\r\n\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n        <App />\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root'),\r\n);"],"sourceRoot":""}